{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "UpdateMinterParamsMsg_for_MetadataUpdateParamsExtension",
  "description": "Message for params so they can be updated individually by governance",
  "type": "object",
  "required": [
    "extension"
  ],
  "properties": {
    "add_sg721_code_ids": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      }
    },
    "code_id": {
      "description": "The minter code id",
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    },
    "creation_fee": {
      "anyOf": [
        {
          "$ref": "#/definitions/Coin"
        },
        {
          "type": "null"
        }
      ]
    },
    "extension": {
      "$ref": "#/definitions/MetadataUpdateParamsExtension"
    },
    "frozen": {
      "type": [
        "boolean",
        "null"
      ]
    },
    "max_trading_offset_secs": {
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    },
    "min_mint_price": {
      "anyOf": [
        {
          "$ref": "#/definitions/Coin"
        },
        {
          "type": "null"
        }
      ]
    },
    "mint_fee_bps": {
      "type": [
        "integer",
        "null"
      ],
      "format": "uint64",
      "minimum": 0.0
    },
    "rm_sg721_code_ids": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0.0
      }
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "MetadataUpdateParamsExtension": {
      "type": "object",
      "properties": {
        "airdrop_mint_fee_bps": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "airdrop_mint_price": {
          "anyOf": [
            {
              "$ref": "#/definitions/Coin"
            },
            {
              "type": "null"
            }
          ]
        },
        "max_per_address_limit": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "max_token_limit": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
